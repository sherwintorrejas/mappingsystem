/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internalpage;
import CONFIG.DBCONNECTOR;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import java.text.*; 
import java.awt.print.*;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
public class grave extends javax.swing.JInternalFrame {
DefaultTableModel model;
    /**
     * Creates new form dashabord
     */
    public grave() {
        initComponents();
        
         displayData();
          this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        
    }
  public void reset(){
   GID.setText(null);
   SN.setText("");
   NOG.setText("");
   }
     public void search(String str){
    model = (DefaultTableModel) GRAVEDET.getModel();
    TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
    GRAVEDET.setRowSorter(trs);
    trs.setRowFilter(RowFilter.regexFilter(str));
    }
    
    public void displayData(){
        try{
       
            DBCONNECTOR dbc = new DBCONNECTOR();
            ResultSet rs = dbc.getData("SELECT * FROM grave");
            GRAVEDET.setModel(DbUtils.resultSetToTableModel(rs));
       
        }catch(SQLException ex){
            System.out.println("Error Message: "+ex);
       
        }
    
     }
    public void filltable () throws SQLException{
        try{
            DBCONNECTOR dbc = new DBCONNECTOR();
            ResultSet rs = dbc.getData("SELECT * FROM grave");
            GRAVEDET.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(SQLException ex){
        
        }
    
    }
     public boolean validation(){
String SPACE= SN.getText();
 if(SPACE.equals("")){
 JOptionPane.showMessageDialog(this, "PLEASE ENTER SECTION NO.");
 return false;
 }      
   if(NOG.equals("")){
 JOptionPane.showMessageDialog(this, "PLEASE ENTER QUANTITY");
 return false;
 }      
   return true;  
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        GID = new javax.swing.JLabel();
        SN = new app.bolivia.swing.JCTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        NOG = new app.bolivia.swing.JCTextField();
        DELETE = new necesario.RSMaterialButtonCircle();
        ADD = new necesario.RSMaterialButtonCircle();
        UPDATE = new necesario.RSMaterialButtonCircle();
        line = new javax.swing.JLabel();
        line1 = new javax.swing.JLabel();
        line4 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        clear = new necesario.RSMaterialButtonCircle();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        GRAVEDET = new rojeru_san.complementos.RSTableMetro();
        search = new app.bolivia.swing.JCTextField();
        rSMaterialButtonCircle2 = new necesario.RSMaterialButtonCircle();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 58, 140));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(204, 0, 0));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GID.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        GID.setForeground(new java.awt.Color(255, 255, 255));
        GID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel10.add(GID, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 220, 32));

        SN.setBackground(new java.awt.Color(204, 0, 0));
        SN.setBorder(null);
        SN.setForeground(new java.awt.Color(153, 255, 153));
        SN.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SN.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        SN.setOpaque(false);
        SN.setPlaceholder("ENTER SECTION NO.");
        SN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SNKeyReleased(evt);
            }
        });
        jPanel10.add(SN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 270, -1));

        jLabel3.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("SECTION NO:");
        jPanel10.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 160, 32));

        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("NUMBER OF GRAVE:");
        jPanel10.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 270, 32));

        NOG.setBackground(new java.awt.Color(204, 0, 0));
        NOG.setBorder(null);
        NOG.setForeground(new java.awt.Color(153, 255, 153));
        NOG.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NOG.setFont(new java.awt.Font("Sylfaen", 1, 15)); // NOI18N
        NOG.setOpaque(false);
        NOG.setPlaceholder("ENTER NUMBER OF SPACE");
        NOG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NOGKeyPressed(evt);
            }
        });
        jPanel10.add(NOG, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 270, -1));

        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });
        jPanel10.add(DELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 110, 59));

        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });
        jPanel10.add(ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 110, 59));

        UPDATE.setText("UPDATE");
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });
        jPanel10.add(UPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 120, 60));

        line.setForeground(new java.awt.Color(25, 20, 20));
        line.setText("_____________________________________________");
        jPanel10.add(line, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 290, 30));

        line1.setForeground(new java.awt.Color(25, 20, 20));
        line1.setText("_____________________________________________");
        jPanel10.add(line1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 290, 30));

        line4.setForeground(new java.awt.Color(25, 20, 20));
        line4.setText("_____________________________________________");
        jPanel10.add(line4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 290, 30));

        jLabel4.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("GRAVE ID:");
        jPanel10.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 160, 32));

        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel10.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 120, 59));

        jPanel1.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 540));

        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("GRAVE LOCATION");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 530, 70));

        GRAVEDET.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        GRAVEDET.setColorBackgoundHead(new java.awt.Color(204, 0, 0));
        GRAVEDET.setFuenteHead(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        GRAVEDET.setGrosorBordeFilas(0);
        GRAVEDET.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GRAVEDETMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(GRAVEDET);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 530, 400));

        search.setBorder(null);
        search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        search.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        search.setPlaceholder("SEARCH");
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 340, 20));

        rSMaterialButtonCircle2.setBackground(new java.awt.Color(204, 0, 0));
        rSMaterialButtonCircle2.setText("PRINT");
        rSMaterialButtonCircle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMaterialButtonCircle2ActionPerformed(evt);
            }
        });
        jPanel1.add(rSMaterialButtonCircle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 110, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GRAVEDETMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GRAVEDETMouseClicked
      int rowIndex = GRAVEDET.getSelectedRow();
        if(rowIndex <0){
        
        }else{
        TableModel model = GRAVEDET.getModel();

        GID.setText(""+model.getValueAt(rowIndex, 0));
        SN.setText(""+model.getValueAt(rowIndex, 1));
        NOG.setText(""+model.getValueAt(rowIndex, 2));
        }
    }//GEN-LAST:event_GRAVEDETMouseClicked

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        if(validation()== true){
            DBCONNECTOR dbc = new DBCONNECTOR();
        dbc.insertData("INSERT INTO grave (  SECTION_NO, SPACE) "
                + "VALUES ('"+SN.getText()+"','"+NOG.getText()+"')");
        displayData();
        reset();
        }     
       
    }//GEN-LAST:event_ADDActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
      if(validation()== true){
      
      DBCONNECTOR dbc = new DBCONNECTOR();
        int num = dbc.updateData("UPDATE grave SET SECTION_NO "
                + "= '"+SN.getText()+"', SPACE = '"+NOG.getText()+"' WHERE GRAVE_ID = '"+GID.getText()+"'");
        if(num ==0){
        
        }else{
        JOptionPane.showMessageDialog(null, "updated successfully");
        displayData();
        reset();
        }
      
      }
    }//GEN-LAST:event_UPDATEActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
       int rowIndex = GRAVEDET.getSelectedRow();
       if(rowIndex < 0){
           JOptionPane.showMessageDialog(null, "Please select a data first");
       }else{
            TableModel model = GRAVEDET.getModel();
            Object value = model.getValueAt(rowIndex, 0);
            String GRAVE = value.toString();
             int a=JOptionPane.showConfirmDialog(null,"Are you sure?");  
                    if(a==JOptionPane.YES_OPTION){  
                            DBCONNECTOR dbc = new DBCONNECTOR();
                            dbc.deleteData1(Integer.parseInt(GRAVE));
                            displayData();
                            reset();
                    }    
       }
    }//GEN-LAST:event_DELETEActionPerformed

    private void NOGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NOGKeyPressed
          char c =evt.getKeyChar();
        if(Character.isLetter(c)){
        NOG.setEditable(false);
        JOptionPane.showMessageDialog(this, "Please enter number only");
        }else{
        NOG.setEditable(true);
        
        }
    }//GEN-LAST:event_NOGKeyPressed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        String seachst = search.getText();
        search(seachst);
    }//GEN-LAST:event_searchKeyReleased

    private void rSMaterialButtonCircle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMaterialButtonCircle2ActionPerformed
     MessageFormat head = new MessageFormat("GRAVE");
        MessageFormat FOOT = new MessageFormat("Page{0, number , integer}");

        try {
            GRAVEDET.print(JTable.PrintMode.NORMAL, head, FOOT);

        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "cannot print");
        }
    }//GEN-LAST:event_rSMaterialButtonCircle2ActionPerformed

    private void SNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SNKeyReleased
       int pos = SN.getCaretPosition();
        SN.setText(SN.getText().toUpperCase());
        SN.setCaretPosition(pos);
        
    }//GEN-LAST:event_SNKeyReleased

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        reset();
    }//GEN-LAST:event_clearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private necesario.RSMaterialButtonCircle ADD;
    private necesario.RSMaterialButtonCircle DELETE;
    private javax.swing.JLabel GID;
    private rojeru_san.complementos.RSTableMetro GRAVEDET;
    private app.bolivia.swing.JCTextField NOG;
    private app.bolivia.swing.JCTextField SN;
    private necesario.RSMaterialButtonCircle UPDATE;
    private necesario.RSMaterialButtonCircle clear;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel line;
    private javax.swing.JLabel line1;
    private javax.swing.JLabel line4;
    private necesario.RSMaterialButtonCircle rSMaterialButtonCircle2;
    private app.bolivia.swing.JCTextField search;
    // End of variables declaration//GEN-END:variables
}
